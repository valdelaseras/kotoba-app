TODO: ARIA, css browser prefixes
TODO: When refactoring, create beautiful reusable components :)
TODO: Add documentation after refactoring
TODO: Seems to be a standard thing to remove the 'app-' prefixes from angular components as long as the tags don't clash with anything already existing? Double check

TODO: Complete katana dataset, not sure what I am missing but I am missing something.
TODO: Find kanji datasets somewhere

TODO: look into ngtemplate / ngcontainer / ngcontent

TODO: routing and routing guards don't work as intended yet I think. When I go to /lobby on phone, I get 'blabla not found'

TODO: Styling related
      - Handle theme setting elegantly and in root of project preferably, not in app-component
      - Set theme color based on selected theme in manifest
      Remaining issues, tested on phone:
      - when tabbing username input on phone, background is suddenly white.
      - white line bottom of landing

      TODO: Change position of submit btn on settings page
      TODO: Custom checkbox styling
      TODO: Third theme with color picker for dark and light with own preferred color for quaternary? Or maybe do tokyo metro lines color based themes
      TODO: On pressing submit btn of settings, need some kind of feedback. Also more visual cues during exam input / after wrong answer was given
      TODO: create nice logo for weird in square icon
      TODO: ff-primary, fs-size styling fixes ( anything with rem etc. ), dark and light theme.
            Obviously replace current fonts with some permanent fonts.
      TODO: I'd like to change the option displayed titles differently from the options as defined in the settings service

TODO: 'All kana' exams don't work

TODO: convert Kanji N5 to N1 dataset to JSON, use Elasticsearch.
      - JMdict (XML) is an entire dictionary. I could just build in a dictionary as well later on but this isn't really what I need
      - Need specific kanji json datasets for each level
      - https://www.yosida.com/en/kanji.php?level=5&page=1 JLPT levels sorted kanji. In sources there are js files that contain all info for N5 kanji
      - Add a complete dictionary ( use Elastic ). Let users add words from dictionary to custom exams

build PWA:
_____________
ng build --prod
http-server -p 8080 -c-1 dist/kotoba-app

serve and allow access via ip:
_____________
ng serve --host 0.0.0.0
